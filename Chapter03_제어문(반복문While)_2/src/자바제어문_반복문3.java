
/* 	변수 : 1개의 데이터를 저장하는 메모리 공간(저장된 영역은 변경해서 다시 저장이 가능) => 데이터형, 식별자 (암기)
 *		- 기능 : 읽기(값 불러오기) / 쓰기(값 메모리에 저장하기)
 *		- 저장 방법 : 메모리 크기 결정(기본형(데이터형) / 참조형(사용자 정의 : 배열, 클래스))
 *		- 데이터형 :
 *			· 정수
 *				byte(1byte)
 *				int(4byte)
 *				long(8byte) : L(l)
 *				=> 컴퓨터가 인식하는 모든 숫자는 int
 *			· 실수
 *				double(8byte) : 소수점 15자리
 *			· 문자
 *				char(2byte) : 0~65535
 *				=> ASC VS Unicode(******)
 *			· 논리
 *				boolean(1byte) : true/false만 저장이 가능
 *
 *	변수 활용(데이터 관리) => 데이터 관리
 *		- 활용 방법 : 연산자,재어문
 *		- 이항연산자 : +, -, *, /, %
 *					==, !=, >, <, >=, <=
 *					&&, ||
 *					=, +=, -=
 *		- 삼항연산자 : ? :
 *		- 자동형변환, 강제형변환
 *		
 *		- 제어문 : 
 *			· if : 오류 발생 시 건너 뛴다.
 *				단일 조건문
 *					if(조건문){
 *						조건이 true일 경우 수행하는 수행문
 *					}
 *				선택 조건문
 *					if(조건문){
 *						조건이 true일 경우 수행하는 수행문
 *					}
 *					else{
 *						조건이 false일 경우 수행하는 수행문
 *					}
 *				다중 조건문
 *					if(조건문){
 *						조건이 true일 경우 수행하는 수행문
 *						조건이 false일 경우 다음 조건문으로 이동
 *					}
 *					else if(조건문){
 *						조건이 true일 경우 수행하는 수행문
 *						조건이 false일 경우 다음 조건문으로 이동
 *					}
 *					else if(조건문){
 *						조건이 true일 경우 수행하는 수행문
 *						조건이 false일 경우 다음 조건문으로 이동
 *					}
 *					else{
 *						해당 조건이 없는 경우
 *					}
 *			· for, while : 반복 수행
 *			· if, switch : 원하는 프로그램 수행
 *
 *		- 선택문
 *			· switch
 *				switch(정수, 문자, 문자열){
 *					case 값 : 
 *						처리 문장
 *						break;
 *					...
 *					default : 
 *						처리 문장
 *						=> 필요 시에 사용
 *				}
 *
 *		- 반복문
 *			· for
 *				for(초기값; 조건식; 증감식){
 *					반복 수행 문장
 *				}
 *			· while
 *				초기값;
 *				while(조건문){
 *					반복 수행 문장
 *					증감식
 *				}
 *
 *		
 */

public class 자바제어문_반복문3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(100);
	}

}
