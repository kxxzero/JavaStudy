package com.sist.main;

/*
 * 	자바
 * 		1. 데이터형
 * 			- 변수(2장)
 * 				· 정수 : byte(파일 입출력 : io), int, long(데이터분석 : 빅데이터)
 * 				· 실수 : double
 * 				· 논리 : boolean
 * 				· 문자열 : String
 * 		2. 처리
 * 			- 연산자(3장)
 * 				· 단항 연산자 : 증가 연산자(++), 부정 연산자(!), 형변환 연산자(자동/강제 => 클래스에도 적용 => 크기(상속, 포함) => instanceof)
 * 				· 이항 연산자 : 산술 연산자(+, -, *, /, %), 비교 연산자(==, !=, <, >, <=, >=), 논리연산자(&&, ||)
 * 				· 삼항 연산자 : 조건?값1:값2;
 * 			- 제어문(4장)
 * 				· 조건문 : 단일 조건문(if), 선택 조건문(if~else), 다중 조건문(if~else if)
 * 				· 반복문 : for(일반적인 브라우저 화면 출력에서 주로 사용) => 2차 for문까지, while(데이터베이스, 파일) => while(true) : 데이터 유 / while(false) : 데이터 무
 * 				· 반복제어문 : continue, break
 * 		3. 배열
 * 			- 1차원
 * 				· 클래스 배열
 * 					예) Music[] String[] => 컬렉션(배열 보완)
 * 		4. 클래스(5~7장)
 * 			1) 구성요소
 * 				- 멤버변수
 * 					· 인스턴스 변수(중심) : 메모리를 따로 저장
 * 					· 정적(static) 변수 : 메모리 공간을 1개만 사용
 * 						= 디자인패턴 : 싱글턴 패턴
 * 						= 팩토리패턴 :
 * 						= 스프링 : 8개 패턴
 * 					· 데이터 보호(캡슐화) : private => 읽기/쓰기 => getter/setter
 * 				- 메소드
 * 					· 다른 클래스와 연결
 * 					· 인스턴스 메소드 : 메모리에 따로 저장
 * 						= 호출 : 객체명.메소드()	
 * 							예) scan.next()
 * 					· 정적 메소드 : 공유(1개의 메소드로 모든 객체 사용) => 한글 변환(웹에서의 주 사용처)
 * 						= 클래스명.메소드()
 * 							예) Math.random()
 * 								String.valueOf()
 * 					*** 메소드
 * 						접근지정어 : public
 * 						리턴형 : 결과값 1개 => 기본형, 클래스형, 배열형
 * 							=> 목록, 상세보기, 검색결과 => 배열/클래스
 * 						메소드명 : 식별자 명명규칙(소문자 시작)
 * 						매개변수(사용자 요청값) : 여러 개 사용 가능 => 3개 이상일 경우 => 배열/클래스
 * 							=> 회원가입, 게시물 글쓰기, 영화 정보
 * 				- 생성자
 * 					· 멤버변수 초기화
 * 					· 시작과 동시에 처리
 * 					· 메모리 할당 시 호출되는 함수
 * 					· 클래스는 무조건 생성자 1개가 필수 => 없는 경우에는 자동으로 1개 추가(디폴트 생성자)
 * 						*** 자동추가
 * 							= import 자동 추가
 * 								=> import java.lang.*
 * 							= 모든 클래스(라이브러리, 사용자 정의 클래스)
 * 								=> 상속(Object)
 * 								예) class MainClass (extends Object)
 * 							= 모든 메소드는 return(메소드 종료)
 * 								=> void일 경우에는 자동으로 return이 추가
 * 								예)
 * 									void aaa()
 * 									{
 * 										// return;
 * 									}
 * 							= 자바에서 지원하는 모든 클래스는 예외 처리
 * 								=> CheckException UnCheckException => 예외 처리 생략
 * 								=> 네트워크 : URL, Socket
 * 									IO : 파일 입출력
 * 									SQL : 오라클 연결 							
 * 							
 * 				- 초기화 블록 : 생성자 사용없이 초기화 하는 방법
 * 					·  인스턴스 블록 : 생성자
 * 					· static 블록 : static 변수 => 생성자를 호출하지 않아도 됨
 * 					
 * 					*** 명시적 초기화 => 불가능(생성자, 초기화 블록)
 * 						= 외부에서 값을 읽어서 초기화
 * 						= 크롤링, 파일, 네트워크...
 * 		
 * 						
 * 		5. 객체 지향 3대 특성 : 문법이 아닌 권장 사항
 * 			1) 캡슐화 : 데이터 보호
 * 				- 변수 은닉화 : private
 * 				- 기능 설정 : getter/setter => Lombok
 * 			2) 재사용 
 * 				- 상속 :
 * 					예) class A
 * 						class B extends A
 * 				- 포함 : 클래스를 변경하지 않은
 * 			3) 상속의 예외 조건 : static
 * 								생성자, 초기화 블록
 * 			4) 변경/추가(다형성)
 * 				- 변경 : 오버라이딩
 * 				- 추가 : 오버로딩
 * 				
 * 								오버로딩				오버라이딩
 * 				--------------------------------------------------
 * 				상태				같은 클래스				상속을 받은 경우
 * 				--------------------------------------------------
 * 				리턴형			관계 없음				동일
 * 				--------------------------------------------------
 * 				메소드명			동일					동일
 * 				--------------------------------------------------
 * 				매개변수			개수나 데이터형이 다름		동일
 * 				--------------------------------------------------
 * 				접근지정어			관계 없음				축소(X), 확대(O)
 * 				--------------------------------------------------
 * 				*** private < default < protected < public
 * 				
 * 				인터페이스
 * 				예)
 * 					interface A
 * 					{
 * 						(public avsteact)void disp();
 * 						(public avsteact)void aaa();
 * 					}
 * 					=> class B implements A
 * 						{
 * 							public void disp(){}
 * 							void aaa(){}
 * 							=> 오류
 * 						}
 * 				
 */

import java.util.*;

//class A{
//	void display() {}
//
//}
//
//class B extends A
//{
//	int a, b;
//	void aaa() {}
//	void display() {} // => 변경
//}
//
//A a=new B(); => 추상클래스 / 인터페이스
//	a.display();
//B b=new B()
//	a,b,aaa(),display()

public class MainClass {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		List names=new ArrayList();
		// 배열 대신 사용		
		names.add("홍길동"); // 0
//		String name(String)names.get(0);
		
	}

}
