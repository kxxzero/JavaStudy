/*
 * 	3page : 자바 실행환경
 * 		A.java == javac(컴파일) ==> A.class(바이트 코드(배포) : 모든 운영체제에 호환) == java(인터프리터) ==> 한 줄씩 읽어서 출력
 * 
 * 	22page : 들여쓰기
 * 	23page : 주석(번역이 안 되는 부분으로 주로 소스를 설명한다.)
 * 
 * 		★ 약속 ★
 * 			1) 클래스명은 대소문자로 시작
 * 			2) 변수는 소문자로 작성
 * 			3) 상수는 전체 대문자로 작성
 * 
 * 	25page : 변수(메모리(주소에 대한 별칭)에 1개의 데이터를 저장하는 공간)
 * 			 형식 : 데이터형(메모리 크기) 변수명;
 * 				- 정수
 * 					· byte : -128 ~ 127 => 네트워크 송수신, 파일 읽기, 파일 쓰기, 사이트 검색
 * 						예) https://www.google.com/search?q=java
 * 					· int : -21억 4천 ~ 21억 4천 => default : 컴퓨터가 인식하는 숫자는 int
 * 					· ling : L(l)
 * 				- 실수
 * 					· double(8byte) : 소수점 15자리 => default
 * 				- 문자
 * 					· char(2byte) : 0~65535(문자 번호) => 멀티바이트(Unicode)
 * 				- 논리
 * 					· boolean(1byte) : true/false
 * 		★ 식별자 명명규칙 ★
 * 			1) 알파벳이나 한글로 시작
 * 			2) 숫자 사용이 가능하나 첫 글자에는 사용 불가
 * 			3) 특수 문자 사용 가능($, _)
 * 			4) 키워드(예약어)는 사용 금지
 * 			5) 공백 포함 불가
 * 
 * 	38page : 연산자
 * 		- 단항연산자
 * 			· 증감연산자(++, --)
 * 			· 부정연산자 (!_
 * 			· 형변환연산자(데이텨형)
 * 		- 이항연산자
 * 			· 산술연산자(+, -, *, /, %)
 * 			· 논리연산자(&&, ||)
 * 			· 대입연산자(=, +=, -=)
 * 		- 삼항연산자
 * 			(조건)?값1:값2 = >if ~ else if
 * 
 * 	54page : 자바에서 제공하는 제어문
 * 		- 조건문
 * 			· 단일 조건문 : 독립적으로 사용. 해당 되는 조건이 많은 경우 사용
 * 				형식 : if(조건문){ // 조건문 : 비교연산자, 부정연산자, 논리연산자만 사용 가능
 * 						조건이 true일 때만 수행
 * 					}
 * 					=> false면 건너뛴다.
 * 			· 선택 조건문 : true / false로 나뉠 때 사용
 * 				형식 : if(조건문){
 * 						조건이 true일 때 수행
 * 					}
 * 					else{
 * 						조건이 false일 때 수행
 * 					}
 * 			· 다중 조건문 : 조건문 여러 개를 나열 후 해당 조건 1개만 수행
 * 				형식 : if(조건문){
 * 						조건이 true일 때 : 문자 수행 종료
 * 						조건이 false일 때 : 아래 조건 실행
 * 					}
 * 					else if(조건문){
 * 						조건이 true일 때 : 문자 수행 종료
 * 						조건이 false일 때 : 아래 조건 실행
 * 					}
 * 					else if(조건문){
 * 						조건이 true일 때 : 문자 수행 종료
 * 						조건이 false일 때 : 아래 조건 실행
 * 					}
 * 					else{
 * 						해당 조건이 없는 경우 수행
 * 					}
 * 			· 선택문
 * 		- 반복문
 * 			· for : 횟수 지정
 * 			· while : 횟수가 없는 경우(무한대)
 * 			· do ~ while : 반드시 1회 이상 수행
 * 		- 반복 제어문
 * 			· break : 반복 종료 (예외 : switch ~ case)
 * 			· continue : 특정 부분을 제외
 * 
 * 
 */

public class 제어문_조건문_정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
