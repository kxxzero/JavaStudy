/*
 * 	자바 => 클래스 기반
 * 		1. 구성 요소
 * 			= 변수 : 기본형 데이터(int, long, double...)
 * 					참조형 데이터(배열, 클래스)
 * 			= 메소드 
 * 			= 생성자
 * 			= 객체지향
 * 		
 * 		2. 메소드 : 특정 작업을 수행하는 일련의 명령문의 집합
 * 			- 1가지 기능 수행이 가능하게 만듦
 * 		 	- 수정, 추가(다형성)
 * 			- 주 사용처 : 클래스를 서로 연결
 * 			- 사용 이유
 * 				· 재사용
 * 				· 유지보수(추가, 수정) => 가독성
 * 				· 문장 => 단락 => 구조적 프로그램
 * 				· 중복 코드 제거
 * 			- 메소드 구조
 * 				· 구성 요소 : 리턴형, 메소드명, 매개변수(인자)
 * 					[접근지정어][옵션] 리턴형 메소드(매개변수)
 * 							  	  -----		-----
 * 							  	  1개만 사용	0개 이상
 * 				· 선언부 / 구현부
 * 					(abstract)리턴형 메소드(매개변수) // 선언부, (abstract) : 선언
 * 					{
 * 						// 구현부 : 구현을 해야 메모리에 저장
 * 					}
 * 				· 리턴형(고정 아님) : 1개의 데이터만 설정 가능 => 기본형, 참조형(배열, 클래스도 1개의 데이터로 취급)
 * 					  			String => 사용자 정의
 * 					메소드 자체에서 처리 : void => 결과값이 없음 
 * 					호출에 의해 처리 : 리턴형이 존재
 * 				· 매개변수 : 사용자 요청값(사용자가 요청에 필요한 데이터) 
 * 						기본형, 참조형(배열, 클래스) => 여러 개 사용이 가능하나 3개 이상 넘어가는 경우 참조형 사용 권장
 * 							
 * 				· 메소드명 : 식별자를 이용 => 사용자 요청에 대한 처리(1가지 기능 수행)
 * 				· void method()
 * 					{
 * 						return; // return : 메소드 처리 종료 => 생략 가능(컴파일러에 의해 자동으로 추가)
 * 					}
 * 					int method()
 * 					{
 * 						return 10; // 데이터형과 데이터는 동일하게 해주는 것이 좋음(권장 사항)
 * 					}
 * 					double method()
 * 					{
 * 						return 10.5(10, 'A', 10.5f);
 * 					}
 * 					String method()
 * 					{
 * 						return "Hello";
 * 					}
 * 					int[] method()
 * 					{
 * 						int[] arr=new int[10];
 * 						return arr;
 * 					}
 * 
 * 		3. 메소드 유형
 * 			- 메소드 안에 선언된 변수(지역 변수)는 해당 메소드 안에서만 사용 가능
 * 				void method()
 * 				{
 * 					int a=10; => 지역 변수(반드시 초기화 후에 사용 가능)
 * 				} // a는 메모리 해제(메모리 자체에서 해제 => stack)
 * 			- 매개변수는 지역변수와 동일 취급
 * 			- return은 메소드 종료를 알려줌
 * 			- 메소드 블록({}) 닫기 전에 return을 사용 => 중간에 사용해서 종료
 * 			
 * 			------------------------------
 * 				리턴형			매개변수
 * 			------------------------------
 * 				 O				  O
 * 				=> String substring(int start)
 * 			------------------------------
 * 				 O				  X
 * 				=> String trim()
 * 					double random()
 * 			------------------------------
 * 				 X				  O
 * 				=> void main(String[] arg)
 * 				=> void println(String s)
 * 			------------------------------
 * 				 X				  X
 * 				=> void println()
 * 			------------------------------
 * 
 * 			=> 결과값이 없는 경우 반드시 void 입력
 * 				오라클 연결(insert, update, delete)
 * 				CRUD
 * 			=> 메소드(행위, 동작) => 동작에 대한 처리
 */
public class 메소드_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
	}

}
