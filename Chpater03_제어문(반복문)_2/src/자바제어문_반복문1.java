
/*
 *	데이터 저장
 *		- 메모리
 *			· 변수
 *			· 상수
 *			· 배열
 *			· 클래스
 * 		- 영구적인 저장 장치
 * 			· 파일
 * 			· RDBMS => JDBC(핵심)
 * 
 * 	데이터 가공 : 사용자 요청 처리
 * 		- 명령문
 * 			· 연산자
 * 			· 제어문
 * 		- 클래스(컴포넌트)
 * 			· 메소드
 * 
 * 	화면 출력 : 요청한 내용 출력
 * 		1) 화면 출력 : System.out.println()
 * 		2) 브라우저 : HTML/CSS/JavaScript
 * 		=> 동시 처리 : Spring
 * 
 * 		Spring Boot (서버) <====================> Front End
 * 		Restful(데이터 전송 과정 - 예) JSON)			 React, Vue(처리 속도)
 * 		=> MSA(각 프로그램마다 따로 서버를 돌림)
 * 
 *		=> AI => 머신러닝/딥러닝
 * 
 * 
 * 	------------------------------------------------------------
 * 	
 * 	<반복문>
 * 		- for : (3회 이상)반복 횟수가 있는 경우 => 브라우저 화면 출력, 페이지네이션(사용자가 한 눈에 볼 수 있는 개수 : 15 ~ 20개)
 * 			형식 : for(초기값; 조건식; 증감식)
 * 				{
 * 					반복 수행 문장
 * 				}
 * 
 * 			순서 : ① 초기값(1회만 사용 가능) → ② 조건식(반복 횟수) → ③ 반복 수행 문자 → ④ 증감식(총 횟수)	
 * 
 * 			2차 for문(중첩 for문) : for(① 초기값; ② 조건식; ⑦증감식) // => 줄수
 * 								{
 * 									for(③ 초기값; ④ 조건식; ⑥증감식) // => 실제 출력물
 * 										{
 * 											⑤ 반복 수행 문장
 * 										}	
 * 								}
 * 		- while : 파일/데이터베이스(오라클), 무한 스크롤
 * 		- do~while
 * 
 */

public class 자바제어문_반복문1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 웹에서는 2차 for문을 잘 사용하지 않는다. 보통 코딩테스트나 중복없는 난수 발생시킬 때 사용
		for(int i=1; i<=3; i++) {
			for(int j=1; j<=3; j++) {
				System.out.println("i=" + i + ", j="+ j);
			}
			System.out.println();
		} 
	}

}
